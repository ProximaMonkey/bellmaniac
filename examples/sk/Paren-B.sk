#include "scalar.sk"
#include "scope.sk"


|scalar| h(int n, fun psi, fun theta, int i, int j) {
    |scalar| f(int k) {
        return apply(plus, only((i < k), theta(i, k)), only((k < j), theta(k, j)));
    }
    return slash(slash(only((J0(i) && J0(j)), psi(i, j)), only((J0(i) && J1(j)), min_acc(psi(i, j), n, f))), only((J1(i) && J1(j)), psi(i, j)));
}
|scalar| f_i(int n, fun psi, fun theta, int i, int j) {
    |scalar| f0(int k) {
        return apply(plus, only((i < k), theta(i, k)), only((k < j), theta(k, j)));
    }
    return slash(slash(only((P1(i) && P1(j)), psi(i, j)), only((P1(i) && P2(j)), min_acc(psi(i, j), n, f0))), only((P2(i) && P2(j)), psi(i, j)));
}

bit X(int a, int b) {
    return (K1(a) && K2(b));
}


/* -- harness -- */

int psi_val(int a, int b);
bit psi_supp(int a, int b);
|scalar| psi(int a, int b) {
    return when(psi_supp(a, b), psi_val(a, b));
}

int theta_val(int a, int b);
bit theta_supp(int a, int b);
|scalar| theta(int a, int b) {
    return when(theta_supp(a, b), theta_val(a, b));
}

#include "harness.sk"

